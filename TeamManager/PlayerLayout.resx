<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>